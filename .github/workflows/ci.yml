name: CI

on:
  push:
    branches: [ main ]
  pull_request:
    branches: [ main, dev ]

jobs:
  build:
    name: Build
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - name: Build and Test
        run: ./gradlew build -DRELEASE_SIGNING_ENABLED=false
  publish:
    name: Publish
    if: github.event_name == 'push' && contains(github.ref, 'main')
    needs: [ build ]
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 15
        uses: actions/setup-java@v1
        with:
          java-version: 15
      - name: Grant execute permission for gradlew
        run: chmod +x gradlew
      - id: install-secret-key
        name: Install gpg secret key
        run: |
          cat <(echo -e "${{ secrets.OSSRH_GPG_SECRET_KEY }}") | gpg --batch --import
          gpg --list-secret-keys --keyid-format LONG
      - id: export-secret-key
        name: Export secret key
        run: gpg --export-secret-key ${{ secrets.OSSRH_GPG_ID }} > ~/.gnupg/secring.gpg
      - name: Publish
        env:
          ORG_GRADLE_PROJECT_mavenCentralRepositoryPassword: ${{ secrets.SONATYPE_PASSWORD }}
          ORG_GRADLE_PROJECT_mavenCentralRepositoryUsername: ${{ secrets.SONATYPE_USERNAME }}
          ORG_GRADLE_PROJECT_signing.keyId: ${{ secrets.OSSRH_GPG_ID }}
          ORG_GRADLE_PROJECT_signing.secretKeyRingFile: /home/runner/.gnupg/secring.gpg
          ORG_GRADLE_PROJECT_signing.password: ${{ secrets.OSSRH_GPG_KEY_PASSWORD }}
        run: ./gradlew publish --no-daemon --no-parallel
